{"version":3,"file":"api_calls.js","names":["_axios","_interopRequireDefault","require","config","API_KEY","process","env","APIKEY","get_id","_ref","_asyncToGenerator2","_regenerator","mark","_callee","player_string","id","wrap","_callee$","_context","prev","next","axios","post","displayName","displayNameCode","headers","sent","console","log","data","abrupt","Response","stop","_x","apply","arguments","get_profile","_x2","_x3","_get_profile","_callee6","mem_type","profile","_callee6$","_context6","get","concat","String","get_clan","_ref2","_callee2","mem_id","info","res1","res2","new_info","_callee2$","_context2","results","group","name","about","groupId","clan_id","grab_members","_x4","_ref3","_callee3","info_store","i","_callee3$","_context3","members","length","push","memType","memberType","destinyUserInfo","online","isOnline","lastOnline","lastOnlineStatusChange","_x5","_x6","manifest_call","_ref4","_callee4","hash","type","types","response","_callee4$","_context4","displayProperties","icon","_x7","_x8","character_info","_ref5","_callee5","char_id","character","_callee5$","_context5","light","classHash","_x9","_x10","_x11","module","exports"],"sources":["../../src/utils/api_calls.js"],"sourcesContent":["// Imports\r\nimport axios from \"axios\";\r\nrequire(\"dotenv\").config(); //Initilize ENV \r\n\r\nlet API_KEY = process.env.APIKEY; // Get API key\r\n\r\n/**\r\n * Function to make an API call and return player's IDs\r\n * @param {string} player_string - username of the player to search for\r\n * @returns {object} Object containing useful information such as \"DisplayName\", \"MemberType\", \"MembershipID\"\r\n */\r\nconst get_id = async (player_string) => {\r\n    let id = await axios\r\n        .post(\r\n            `https://www.bungie.net/Platform/Destiny2/SearchDestinyPlayerByBungieName/-1`,{displayName:\"docthunder58\",displayNameCode:\"9451\"},\r\n            { headers: { \"X-API-KEY\": API_KEY }}\r\n        )\r\n    console.log(id.data)\r\n    return id.data.Response\r\n};\r\n\r\n/**\r\n * Function to make and API call and return profile\r\n * @param {string} mem_type - bungie Membership Type (provided by get_id())\r\n * @param {string} id - bungie Membership Id (provided by get_id())\r\n * @returns {object} Contains data from api call including last online and raw character data\r\n */\r\nasync function get_profile(mem_type, id) {\r\n    const profile = await axios\r\n        .get(\r\n            `https://www.bungie.net/Platform/Destiny2/${String(\r\n                mem_type\r\n            )}/Profile/` + `${String(id)}/?components=100,205`,\r\n            { headers: { \"X-API-KEY\": API_KEY } }\r\n        )\r\n    return profile.data\r\n};\r\n\r\n/**\r\n * Makes an API call for the clan of a member\r\n * @param {string} mem_id - Bungie membership Id (provided by get_id()) \r\n * @returns {object} - Object containing the members of a clan as well as clan name and desctiption.\r\n */\r\nconst get_clan = async (mem_id) => {\r\n    let info = {};\r\n    let res1 = await axios.get(\r\n        `https://www.bungie.net/Platform/GroupV2/User/1/${mem_id}/0/1/`,\r\n        {\r\n            headers: { \"X-API-KEY\": API_KEY },\r\n        }\r\n    );\r\n    info[\"name\"] = res1.data.Response.results[0].group.name;\r\n    info[\"desc\"] = res1.data.Response.results[0].group.about;\r\n    info[\"clan_id\"] = res1.data.Response.results[0].group.groupId;\r\n    let res2 = await axios.get(\r\n        `https://www.bungie.net/Platform//GroupV2/${info.clan_id}/Members/`,\r\n        {\r\n            headers: { \"X-API-KEY\": API_KEY },\r\n        }\r\n    );\r\n    let new_info = await grab_members(res2.data.Response.results, info);\r\n    return new_info\r\n};\r\n/**\r\n * Cleans the data from a clan call\r\n * @param {Array} data - Array of users from clan call\r\n * @param {Object} info_store - the Object to store the member information\r\n * @returns {object} returns the data array with members modified to include membertype, name, online, and lastOnline\r\n */\r\nconst grab_members = async (data, info_store) => {\r\n    info_store.members = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n        info_store.members.push({\r\n            memType: data[i].memberType,\r\n            name: data[i].destinyUserInfo.displayName,\r\n            online: data[i].isOnline,\r\n            lastOnline: data[i].lastOnlineStatusChange,\r\n        });\r\n    }\r\n    return info_store;\r\n};\r\n\r\n/**\r\n * Makes API call to bungie Manifest\r\n * @param {string} hash - Hash to query the Manifest for \r\n * @param {string} type - Type of to search the Manifest for Class or Equipment\r\n * @returns {object} Object containing the name and icon of the item matching the hash\r\n */\r\nconst manifest_call = async (hash, type) => {\r\n    let types = {\r\n        \"class\":\"DestinyClassDefinition\",\r\n        \"equipment\":\"DestinyInventoryItemDefinition\"\r\n    }\r\n    let response = await axios.get(`https://www.bungie.net/Platform/Destiny2/Manifest/${types[type]}/${hash+\"\"}/`,{ headers: { \"X-API-KEY\": API_KEY } })\r\n    return {\r\n        \"name\":response.data.Response.displayProperties.name,\r\n        \"icon\":response.data.Response.displayProperties.icon,\r\n        }\r\n\r\n}\r\n\r\n/**\r\n * Makes and API call to get the light and class of a character\r\n * @param {string} char_id - The id of the character to query for\r\n * @param {string} mem_type - The membership type of the player to query for\r\n * @param {string} mem_id - The membership id of the player to query for\r\n * @returns {object} Object containing the character data class and light\r\n */\r\nconst character_info = async (char_id, mem_type, mem_id) => {\r\n    let character = {}\r\n    let response = await axios.get(`https://www.bungie.net/Platform/Destiny2/${mem_type}/Profile/${mem_id}/Character/${char_id}/?components=200`,{ headers: { \"X-API-KEY\": API_KEY } })\r\n    character[\"light\"]=response.data.Response.character.data.light\r\n    let type = await manifest_call(response.data.Response.character.data.classHash,\"class\")\r\n    character[\"class\"] = type.name\r\n    return character\r\n}\r\n\r\nmodule.exports = { get_id, get_profile, get_clan, manifest_call, character_info };\r\n"],"mappings":"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"}