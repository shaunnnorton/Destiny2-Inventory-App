{"version":3,"sources":["../../src/utils/api_calls.js"],"names":["require","config","API_KEY","process","env","APIKEY","get_id","player_string","axios","get","headers","id","data","Response","get_profile","mem_type","String","profile","get_clan","mem_id","info","res1","results","group","name","about","groupId","clan_id","res2","grab_members","new_info","info_store","members","i","length","push","memType","memberType","destinyUserInfo","displayName","online","isOnline","lastOnline","lastOnlineStatusChange","manifest_call","hash","type","types","response","displayProperties","icon","character_info","char_id","character","light","classHash","module","exports"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { response } from \"express\";\nrequire(\"dotenv\").config();\n\nlet API_KEY = process.env.APIKEY;\n\nconst get_id = async (player_string) => {\n    let id = await axios\n        .get(\n            `https://www.bungie.net/Platform/Destiny2/SearchDestinyPlayer` +\n                `/-1/${player_string}`,\n            { headers: { \"X-API-KEY\": API_KEY } }\n        )\n    return id.data.Response\n        // .then((res) => {\n        //     //console.log(res.data.Response);\n        //     return res.data[\"Response\"];\n        // })\n        // .catch((err) => {\n        //     console.log(err);\n        // });\n};\n\nasync function get_profile(mem_type, id) {\n    const profile = await axios\n        .get(\n            `https://www.bungie.net/Platform/Destiny2/${String(\n                mem_type\n            )}/Profile/` + `${String(id)}/?components=100,205`,\n            { headers: { \"X-API-KEY\": API_KEY } }\n        )\n    return profile.data.Response\n        // .then((res) => {\n        //     //console.log(res.data.Response.characterEquipment)\n        //     let profile = res.data.Response\n        //     return profile;\n        // })\n        // .catch((err) => {\n        //     return err.response;\n        // });\n};\n\nconst get_clan = async (mem_id) => {\n    let info = {};\n    let res1 = await axios.get(\n        `https://www.bungie.net/Platform/GroupV2/User/1/${mem_id}/0/1/`,\n        {\n            headers: { \"X-API-KEY\": API_KEY },\n        }\n    );\n    info[\"name\"] = res1.data.Response.results[0].group.name;\n    info[\"desc\"] = res1.data.Response.results[0].group.about;\n    info[\"clan_id\"] = res1.data.Response.results[0].group.groupId;\n    let res2 = await axios.get(\n        `https://www.bungie.net/Platform//GroupV2/${info.clan_id}/Members/`,\n        {\n            headers: { \"X-API-KEY\": API_KEY },\n        }\n    );\n    let new_info = await grab_members(res2.data.Response.results, info);\n    return new_info\n};\n/**\n * @param {Array} data - Array of users from clan call\n * @param {Object} info_store - the Object to store the member information\n */\nconst grab_members = async (data, info_store) => {\n    info_store.members = [];\n    for (let i = 0; i < data.length; i++) {\n        info_store.members.push({\n            memType: data[i].memberType,\n            name: data[i].destinyUserInfo.displayName,\n            online: data[i].isOnline,\n            lastOnline: data[i].lastOnlineStatusChange,\n        });\n    }\n    return info_store;\n};\n\nconst manifest_call = async (hash, type) => {\n    let types = {\n        \"class\":\"DestinyClassDefinition\",\n        \"equipment\":\"DestinyInventoryItemDefinition\"\n    }\n    let response = await axios.get(`https://www.bungie.net/Platform/Destiny2/Manifest/${types[type]}/${hash+\"\"}/`,{ headers: { \"X-API-KEY\": API_KEY } })\n    return {\n        \"name\":response.data.Response.displayProperties.name,\n        \"icon\":response.data.Response.displayProperties.icon,\n        }\n\n}\n\nconst character_info = async (char_id, mem_type, mem_id) => {\n    let character = {}\n    let response = await axios.get(`https://www.bungie.net/Platform/Destiny2/${mem_type}/Profile/${mem_id}/Character/${char_id}/?components=200`,{ headers: { \"X-API-KEY\": API_KEY } })\n    //console.log(response.data.Response.character.data)\n    character[\"light\"]=response.data.Response.character.data.light\n    let type = await manifest_call(response.data.Response.character.data.classHash,\"class\")\n    character[\"class\"]= type.name\n    //console.log(character)\n    return character\n}\n//console.log(character_info('2305843009260839594','1','4611686018444606398'))\n\nmodule.exports = { get_id, get_profile, get_clan, manifest_call, character_info };\n"],"file":"api_calls.js"}