{"version":3,"sources":["../../src/routes/data.js"],"names":["router","post","req","res","translations","translate_inventory_items","body","player","characters","send","api_calls","get_id","params","username","err","console","log","id","type","get_profile","profile","get_clan","member_id","clan_raw","translate_clan_members","clan"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAHA;AAKA;AACA,IAAMA,MAAM,GAAG,sBAAf,C,CACA;AAEA;;AACAA,MAAM,CAACC,IAAP,CAAY,uBAAZ;AAAA,2FAAoC,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPC,sBAAaC,yBAAb,CAAuCH,GAAG,CAACI,IAAJ,CAASC,MAAhD,CADO;;AAAA;AAC1BC,YAAAA,UAD0B;AAEhCL,YAAAA,GAAG,CAACM,IAAJ,CAASD,UAAT;;AAFgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA,K,CAKA;;AACAR,MAAM,CAACC,IAAP,CAAY,eAAZ;AAAA,4FAA4B,kBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPO,sBAAUC,MAAV,CAAiBT,GAAG,CAACU,MAAJ,CAAWC,QAA5B,WAA4C,UAAAC,GAAG,EAAI;AAChEC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,aAFgB,CADO;;AAAA;AAClBG,YAAAA,EADkB;AAIxBd,YAAAA,GAAG,CAACM,IAAJ,CAASQ,EAAE,CAAC,CAAD,CAAX;;AAJwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA,K,CAOA;AACA;;AACAjB,MAAM,CAACC,IAAP,CAAY,oBAAZ;AAAA,4FAAkC,kBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1Be,YAAAA,IAD0B,GACnBhB,GAAG,CAACI,IAAJ,CAASY,IADU;AAE1BD,YAAAA,EAF0B,GAErBf,GAAG,CAACI,IAAJ,CAASW,EAFY;AAAA;AAAA,mBAGVP,sBAAUS,WAAV,CAAsBD,IAAtB,EAA2BD,EAA3B,CAHU;;AAAA;AAG1BG,YAAAA,OAH0B;AAI9BjB,YAAAA,GAAG,CAACM,IAAJ,CAASW,OAAT;;AAJ8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlC;;AAAA;AAAA;AAAA;AAAA,K,CAMA;AACA;;AACApB,MAAM,CAACC,IAAP,CAAY,iBAAZ;AAAA,4FAA8B,kBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLO,sBAAUW,QAAV,CAAmBnB,GAAG,CAACI,IAAJ,CAASgB,SAA5B,CADK;;AAAA;AACtBC,YAAAA,QADsB;AAAA;AAAA,mBAETnB,sBAAaoB,sBAAb,CAAoCD,QAApC,CAFS;;AAAA;AAEtBE,YAAAA,IAFsB;AAG1BtB,YAAAA,GAAG,CAACM,IAAJ,CAASc,QAAT;;AAH0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA,K,CAOA;;eAEevB,M","sourcesContent":["//Imports\nimport { Router } from \"express\";\nimport api_calls from \"../utils/api_calls.js\"\nimport translations from \"../utils/translate.js\"\n\n// Initializes Router\nconst router = Router()\n//--------------------------------ROUTES---------------------------------------\n\n// Route returning an object containing character information for a player\nrouter.post(\"/:username/characters\",async (req,res) =>{\n    const characters = await translations.translate_inventory_items(req.body.player)\n    res.send(characters)\n})\n\n// Route returning an object containing the id information of the username\nrouter.post(\"/:username/id\",async (req,res) =>{\n    const id = await api_calls.get_id(req.params.username).catch(err => {\n        console.log(err)\n    })\n    res.send(id[0])\n})\n\n// Route returning an object containing the profile information from the\n// type and id prvided\nrouter.post(\"/:username/profile\", async (req,res) => {\n    let type = req.body.type\n    let id = req.body.id\n    let profile = await api_calls.get_profile(type,id)\n    res.send(profile)\n})\n// Route returning an object containing the clan information from memberid\n// provided\nrouter.post(\"/:username/clan\",async (req,res) =>{\n    let clan_raw = await api_calls.get_clan(req.body.member_id)\n    let clan = await translations.translate_clan_members(clan_raw)\n    res.send(clan_raw)\n})\n\n\n//-------------------------------END ROUTES-------------------------------------\n\nexport default router"],"file":"data.js"}